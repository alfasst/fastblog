{
  
    
        "post0": {
            "title": "One Jupyter - Three Languages",
            "content": "JupyterLab for Python, R &amp; Julia . I use Python for my coding work usually and R occasionally. And I’m currently learning Julia. Spyder (for Python), Juno (for Julia) and RStudio (obviously for R) were my usual editors. But now I use Jupyter for all three languages. So I would like to explain the process of integrating R and Julia into JupyterLab because Python is the default in Jupyter. . I use elementary OS. Thus Python 3 comes pre-installed. Otherwise you have to install Python along with pip and need to add both binaries’ locations to PATH. . Install JupyterLab . JupyterLab can be installed using pip: $ pip install jupyterlab . If you are using any Gnu/Linux, you may have to run: $ sudo pip3 install jupyterlab . Running jupyterlab in terminal/cmd, will open JupyterLab in a browser window. . Install R &amp; Support for Jupyter . R binaries for Gnu/Linux, Windows &amp; Mac are available at CRAN. Download and install R. Add the installation path to PATH if required. . If you are using Ubuntu or any Ubuntu derivatives like elementary OS, there is a better way. . Add GPG key: $ sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9 | Add R repo: $ sudo add-apt-repository &#39;deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran40/&#39; If you are not using bionic (Ubuntu 18.04), change the above code according to your version. | Update repos and install R: $ sudo apt update &amp;&amp; sudo apt install r-base | Setting Up Jupyter for R . Running R in terminal/cmd, will open R interactive shell. But if you are using Gnu/Linux, you have to do sudo R to install packages. Anyway, open R shell. Then: . Install IRkernel: &gt; install.packages(&#39;IRkernel&#39;) | Make the kernel available to Jupyter &gt; IRkernel::installspec(user = FALSE) Setting user=TRUE will limit installation only for the current user. After doing these, Jupyter can be used to create R notebooks. | Install and Set Up Julia . Julia binaries are available at julialang.org. For Gnu/Linux, don’t use snap as it provides older version. Julia shows significant changes over versions. After installation/extraction, add Julia executable to PATH. . Install &amp; Set Up IJulia . IJulia provides Jupyter support to Julia. To install IJulia, open Julia by typing julia in shell. Switch to Pkg mode by hitting ]. (@v1.5) pkg&gt; add IJulia After installation, to make Julia available in Jupyter, build IJulia. (@v1.5) pkg&gt; build IJulia . So Jupyter is ready to use with Python, R and Julia. . References . Using R on Jupyter Notebook - DZone Big Data | How To Install R on Ubuntu 18.04 - Digital Ocean | .",
            "url": "https://alfasst.github.io/fastblog/jupyter/r/julia/python/2020/09/17/3langs-one-Jupyter.html",
            "relUrl": "/jupyter/r/julia/python/2020/09/17/3langs-one-Jupyter.html",
            "date": " • Sep 17, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://alfasst.github.io/fastblog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://alfasst.github.io/fastblog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}